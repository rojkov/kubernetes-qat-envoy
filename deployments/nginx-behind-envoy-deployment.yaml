apiVersion: v1
kind: Service
metadata:
  name: hellonginx
  labels:
    app: nginx-behind-envoy
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: https
    - port: 7000
      targetPort: 7000
      protocol: TCP
      name: http
  selector:
    app: nginx-behind-envoy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-sidecar-config
data:
  envoy-conf.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 9000
        filter_chains:
          tls_context:
            common_tls_context:
              tls_certificates:
                certificate_chain: { "filename": "/etc/envoy/tls/tls.crt" }
                private_key: { "filename": "/etc/envoy/tls/tls.key" }
          filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                require_ssl: all
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.router
                config: {}
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 7000
        filter_chains:
          filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                require_ssl: all
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
              http_filters:
              - name: envoy.qatzip
                config: {}
              - name: envoy.router
                config: {}
      clusters:
      - name: local_service
        connect_timeout: 0.25s
        type: STATIC
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 80
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9001
  openssl.cnf: |
    openssl_conf = openssl_init
    [ openssl_init ]
    engines = engine_section
    [ engine_section ]
    qat = qat_section
    [ qat_section ]
    engine_id = qat
    default_algorithms = ALL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-behind-envoy
  labels:
    app: nginx-behind-envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-behind-envoy
  template:
    metadata:
      labels:
        app: nginx-behind-envoy
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          resources:
            limits:
              cpu: 8
              memory: "2G"
            requests:
              cpu: 8
              memory: "2G"
        - name: envoy-sidecar
          image: envoy-qat:devel
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add: ["IPC_LOCK"]
          command:
            - "/envoy-static"
          args:
            - "-c"
            - "/etc/envoy/config/envoy-conf.yaml"
            - "--cpuset-threads"
          env:
            - name: OPENSSL_CONF
              value: /etc/envoy/config/openssl.cnf
          resources:
            limits:
              qat.intel.com/cy1_dc1: 1
              cpu: 2
              memory: "2G"
              hugepages-2Mi: "200Mi"
            requests:
              cpu: 2
              memory: "2G"
              hugepages-2Mi: "200Mi"
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: hugepage
              mountPath: /dev/hugepages
            - name: tls
              mountPath: /etc/envoy/tls
              readOnly: true
            - name: config
              mountPath: /etc/envoy/config
              readOnly: true
      volumes:
        - name: hugepage
          emptyDir:
            medium: HugePages
        - name: tls
          secret:
            secretName: envoy-tls-secret
        - name: config
          configMap:
            name: envoy-sidecar-config

